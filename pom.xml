<?xml version="1.0" encoding="UTF-8"?>

<!--
    Copyright 2014 VU University Medical Center.
    Licensed under the Apache License version 2.0 (see http://opensource.org/licenses/Apache-2.0).

    Description: Maven configuration for the Workflow Runner tool.
-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <!-- General project settings. -->
    <name>Workflow Runner</name>
    <description>Workflow Runner tool for running a workflow on a Galaxy server</description>
    <url>https://github.com/CTMM-TraIT/trait_workflow_runner/tree/master</url>
    <groupId>nl.vumc.biomedbridges</groupId>
    <artifactId>WorkflowRunner</artifactId>
    <version>0.1.0</version>
    <packaging>jar</packaging>

    <properties>

        <!-- Dependency versions. -->
        <blend4j.version>0.1-alpha-7</blend4j.version>
        <guava.version>15.0</guava.version>
        <httpclient.version>4.3.2</httpclient.version>
        <junit.version>4.11</junit.version>
        <mockito.version>1.9.5</mockito.version>
        <org.slf4j.version>1.7.6</org.slf4j.version>
        <powermock.version>1.5.3</powermock.version>

        <!-- Source and output properties. -->
        <java-version>1.7</java-version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Plugin versions. -->
        <maven-checkstyle-plugin.version>2.11</maven-checkstyle-plugin.version>
        <maven-compiler-plugin.version>3.1</maven-compiler-plugin.version>
        <maven-jar-plugin.version>2.4</maven-jar-plugin.version>
        <maven-jxr-plugin.version>2.4</maven-jxr-plugin.version>
        <maven-pmd-plugin.version>3.0</maven-pmd-plugin.version>

    </properties>

    <dependencies>

        <!-- Dependency for blend-4j. See https://github.com/jmchilton/blend4j#jars for more details. -->
        <dependency>
            <groupId>com.github.jmchilton.blend4j</groupId>
            <artifactId>blend4j</artifactId>
            <version>${blend4j.version}</version>
        </dependency>

        <!-- Dependency for Guava. -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>

        <!-- Dependency for HttpClient. -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${httpclient.version}</version>
        </dependency>

        <!-- Dependency for JUnit. -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Dependency for Mockito. -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Dependencies for PowerMock. -->
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Dependencies for the logging framework: SLF4J and log4j. -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${org.slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${org.slf4j.version}</version>
        </dependency>

    </dependencies>

    <dependencyManagement/>

    <build>

        <sourceDirectory>src/main/java</sourceDirectory>
        <testSourceDirectory>src/test/java</testSourceDirectory>
        <directory>target</directory>

        <plugins>
            <!-- Specify Java 7 for sources and targets (.class files). -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${java-version}</source>
                    <target>${java-version}</target>
                </configuration>
            </plugin>

            <!-- Use maven-jar-plugin to create executable jar with the "mvn package" command. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven-jar-plugin.version}</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>nl.vumc.biomedbridges.WorkflowRunner</mainClass>
                            <classpathPrefix>dependency-jars/</classpathPrefix>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <!-- Run Checkstyle in the verify phase. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven-checkstyle-plugin.version}</version>
                <inherited>true</inherited>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>checkstyle</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <configLocation>checkstyle.xml</configLocation>
                    <suppressionsLocation>checkstyle-suppressions.xml</suppressionsLocation>
                    <!--
                        Workaround for resolving the suppressions file in a Maven build: always check two
                        module levels above the current project. IDE builds should provide the config_loc
                        property, hence this setting will not influence the builds triggered in IDEs.
                    -->
                    <!--<propertyExpansion>config_loc=${project.parent.parent.basedir}/</propertyExpansion>-->
                    <failsOnError>true</failsOnError>
                </configuration>
            </plugin>

        </plugins>

    </build>

    <reporting>
        <plugins>

            <!-- Added the JXR plugin (Java cross-reference tool) after reading the following question and answers on
              -  Stack Overflow (http://stackoverflow.com/questions/12038238/unable-to-locate-source-xref-to-link-to) to
              -  get rid of the "Unable to locate Source XRef to link to - DISABLED" warning when running Checkstyle. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>${maven-jxr-plugin.version}</version>
            </plugin>

            <!-- PMD ("Programming Mistake Detector") and CPD (Copy/Paste Detector) configuration. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${maven-pmd-plugin.version}</version>
                <configuration>
                    <!--<linkXref>true</linkXref>-->
                    <sourceEncoding>UTF-8</sourceEncoding>
                    <minimumTokens>100</minimumTokens>
                    <targetJdk>${java-version}</targetJdk>
                </configuration>
            </plugin>

        </plugins>
    </reporting>

</project>
